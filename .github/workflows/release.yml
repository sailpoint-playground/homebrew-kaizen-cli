name: Manual Release

on:
  # This section allows you to trigger the workflow manually
  workflow_dispatch:
    inputs:
      version:
        description: 'SemVer version to use for the release (e.g., v1.0.4)'
        required: true
        default: ''

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          body: |
            Release created from manual run for version ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [create_release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goarch: amd64
            target: linux-amd64
          - os: macos-latest
            goarch: amd64
            target: darwin-amd64
          - os: ubuntu-latest
            goarch: arm64
            target: linux-arm64
          - os: macos-latest
            goarch: arm64
            target: darwin-arm64
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.24"

      - name: Build
        run: |
          GOOS=${{ matrix.target == 'linux-amd64' && 'linux' || matrix.target == 'darwin-amd64' && 'darwin' || 'linux' }} GOARCH=${{ matrix.goarch }} go build -o kaizen-cli-${{ matrix.target }} .
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./kaizen-cli-${{ matrix.target }}
          asset_name: kaizen-cli-${{ matrix.target }}
          asset_content_type: application/octet-stream
